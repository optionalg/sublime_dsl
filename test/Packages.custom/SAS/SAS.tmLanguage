<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>fileTypes</key>
	<array>
		<string>sas</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^\s*(?i:proc|data|%macro).*;$</string>
	<key>foldingStopMarker</key>
	<string>(?i:run|quit|%mend);</string>
	<key>name</key>
	<string>SAS</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>include</key>
			<string>#comment</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#strings</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro_open_code</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro_keyword_invalid</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro_def</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#data_proc</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro_call_open</string>
		</dict>
		<dict>
			<key>include</key>
			<string>#macro_variable</string>
		</dict>
	</array>
	<key>repository</key>
	<dict>
		<key>comment</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#comment_star</string>
				</dict>
			</array>
		</dict>
		<key>comment_block</key>
		<dict>
			<key>begin</key>
			<string>/\*</string>
			<key>captures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.comment.sas</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\*/</string>
			<key>name</key>
			<string>comment.block.sas</string>
		</dict>
		<key>comment_star</key>
		<dict>
			<key>begin</key>
			<string>(?xi) (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? \s* (%?\*)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>entity.name.section.label.sas</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>comment.star.sas</string>
				</dict>
			</dict>
			<key>contentName</key>
			<string>comment.star.sas</string>
			<key>end</key>
			<string>;</string>
			<key>endCaptures</key>
			<dict>
				<key>0</key>
				<dict>
					<key>name</key>
					<string>comment.star.sas</string>
				</dict>
			</dict>
		</dict>
		<key>data_function</key>
		<dict>
			<key>begin</key>
			<string>(?ix) \b (?&lt;!%) ((a(bs|ddr(long)?|iry|ll(comb|perm)|ny(al(num|pha)|cntrl|digit|first|graph|lower|name|p(rint|unct)|space|upper|xdigit)|r(cosh?|sinh?|tanh)|t(an2?|tr[cn]))|b(and|eta(inv)?|l(ack(clprc|ptprc)|ksh(clprc|ptprc)|shift)|not|or|rshift|xor|yte)|c(at[qstx]?|df|e(ilz?|xist)|h(ar|oose[cn])|inv|lose|miss|nonct|o(alescec?|llate|m(b|p(are|bl|ged|lev|ound|ress))|n(stant|vxp?)|sh?|unt[cw]?)|ss|urobs|v)|d(a(cc(db(sl)?|s(l|yd)|tab)|iry|t(dif|e(jul|part|time)?)|y)|c(lose|reate)|e(p(db(sl)?|s(l|yd)|tab)|quote|viance)|hms|i(f|gamma|m|nfo|vide)|num|op(en|tn(ame|um))|r(ead|opnote)|sname|urp?)|e(nvlen|rfc?|uclid|x(ist|p))|f(a(ct|ppend)|c(lose|ol)|delete|e(tch(obs)?|xist)|get|i(le(exist|name|ref)|n(ance|d[cw]?|fo|v)|p(namel?|state)|rst)|loorz?|no(nct|te)|op(en|tn(ame|um))|p(o(int|s)|ut)|r(e(ad|wind)|len)|sep|uzz|write)|g(a(m(inv|ma)|rkh(clprc|ptprc))|cd|e(o(dist|meanz?)|t(option|var[cn]))|raycode)|h(armeanz?|bound|ms|o(liday|ur)|tml(decode|encode))|i(bessel|f[cn]|n(dex[cw]?|put[cn]?|t(c(index|k|ycle)|f(it|mt)|get|index|nx|rr|s(eas|hift)|test|z)?)|orcmsg|qr|rr)|j(bessel|uldate7?)|kurtosis|l(a(g|rgest)|bound|c(m|omb)|e(ft|ngth[cmn]?|x(combi?|per[km]))|fact|gamma|ib(name|ref)|o(g(1(0|px)|2|beta|cdf|pdf|sdf)?|wcase)|p(erm|norm))|m(a(d|rgr(clprc|ptprc)|x)|d[5y]|e(an|dian)|i(n(ute)?|ssing)|o(d(ule[cn]|z)?|nth|pen|rt)|splint)|n(etpv|literal|miss|o(rmal|t(al(num|pha)|cntrl|digit|e|first|graph|lower|name|p(rint|unct)|space|upper|xdigit))|pv|valid|wkdom)?|o(pen|rdinal)|p(athname|ctl|df|e(ek(c(long)?|long)?|rm)|oi(nt|sson)|r(o(b(b(eta|n(ml|rm))|chi|f|gam|hypr|it|mc|n(egb|orm)|t)|pcase)|x(change|match|p(ar(en|se)|osn)))|trlongadd|ut[cn]?|vp)|q(tr|u(antile|ote))|r(an(bin|cau|d|exp|g(am|e)|k|nor|poi|t(bl|ri)|uni)|e(name|peat|solve|verse|wind)|ight|ms|ound[ez]?)|s(aving|can|df|econd|i(gn|nh?)|kewness|leep|mallest|oundex|pedis|qrt|t(d(err)?|fips|namel?|rip)|u(b(pad|strn?)|m(abs)?)|y(m(exist|g(et|lobl)|local)|s(get|msg|p(arm|ro(cess(id|name)|d))|rc|tem)))|t(anh?|i(me(part)?|nv)|nonct|oday|r(an(s(late|trn)|wrd)|i(gamma|mn?)|unc))|u(niform|pcase|rl(decode|encode)|ss|uidgen)|v(ar(fmt|infmt|l(abel|en)|n(ame|um)|rayx?|type)?|erify|format(dx?|nx?|wx?|x)?|in(arrayx?|format(dx?|nx?|wx?|x)?)|l(abelx?|engthx?)|namex?|typex?|valuex?)|w(eek(day)?|hich[cn])|y(ear|ieldp|rdif|yq)|zip(city(distance)?|fips|namel?|state))) \s* \(</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.function.data.sas</string>
				</dict>
			</dict>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#data_function</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parens</string>
				</dict>
			</array>
		</dict>
		<key>data_proc</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (page|run|endsas|quit)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.general.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.general.d-no-arg.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[^;\s]+</string>
							<key>name</key>
							<string>invalid.illegal.argument.sas</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (
            options|ods|
            catname|filename|libname|sasfile|
            x|skip|footnote([1-9]|10)?|title([1-9]|10)?|
            checkpoint|dm|lock|sysecho|systask|waitfor
          )\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.general.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.general.d-with-arg.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (data)\b(?!\s*=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.general.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.general.d-data.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#dataset_list</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s* (set|merge|update|modify)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.data.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.data.d-exec-set-merge.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#dataset_list</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.type.set-merge-option.sas</string>
								</dict>
								<key>2</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.set-merge-option.sas</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?ix) (?: (end|key|indsname|nobs|open|point|updatemode)|([a-z]+) ) \s* = ([^=;]+)</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (where)\b(?!\s*=)</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.d-where.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#logical_op</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (
            by|file|infile|
            array|drop|format|informat|keep|label|length|missing|rename|retain|
            window|display
          )\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.data.d-decl-with-arg.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (attrib)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.data.d-attrib.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.type.attrib-option.sas</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?ix) \b(length|label|format) \s* =</string>
							<key>name</key>
							<string>meta.statement.attrib.sas</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.data.noarg.sas</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s*
            (delete|describe|execute|list|lostcard|stop|continue|end|leave|return) \s*;</string>
					<key>name</key>
					<string>meta.statement.data.d-exec-no-arg.sas</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s* (
            abort|declare|error|output|putlog|redirect|remove|replace|
            link|input|put|go\s*to
          )\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.data.d-exec-with-arg.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s* (do)\s+(while|until) \s* \(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*;</string>
					<key>name</key>
					<string>meta.statement.data.d-do-while.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s* (do) \s+ (\S+) \s*=</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.data.d-do-iter.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(to|by)\b</string>
							<key>name</key>
							<string>keyword.control.data.sas</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s* (select) \s* \(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*;</string>
					<key>name</key>
					<string>meta.statement.data.d-select-with-arg.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s* (do|select)\b;</string>
					<key>name</key>
					<string>meta.statement.data.d-select-no-arg.sas</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (when) \s* \(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.statement.data.d-when.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (otherwise) \s*</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>name</key>
					<string>meta.statement.data.d-otherwise.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s*
                    (call) \s+ ((all(combi?|perm)|c(at[stx]|ompcost)|execute|graycode|is8601_convert|l(abel|ex(combi?|per[km])|ogistic)|m(issing|odule)|p(oke(long)?|rx(change|debug|free|next|posn|substr))|ran(bin|cau|exp|gam|nor|p(er[km]|oi)|t(bl|ri)|uni)|s(can|et|leep|o(ftmax|rt[cn])|t(dize|reaminit)|y(mputx?|stem))|tanh|vn(ame|ext))) \s* \(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>4</key>
						<dict>
							<key>name</key>
							<string>support.function.call-routine.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)\s*;</string>
					<key>name</key>
					<string>meta.statement.data.d-call-routine.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s*
            ([_a-z][_a-z0-9]*) (\s*\(.+?\)\s*)? \s*=</string>
					<key>name</key>
					<string>meta.statement.data.d-ass.sas</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix) (?: (?&lt;=^|;) \s* (?:([_a-z][_a-z0-9]*)\s*:)? | \b(then|else)\b ) \s* (if)\b</string>
					<key>name</key>
					<string>meta.statement.data.d-if.sas</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#logical_op</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?ix) \b(first|last)\.</string>
					<key>name</key>
					<string>support.type.first-last.sas</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>entity.name.section.label.sas</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix) (?&lt;=^|;) \s* ([_a-z][_a-z0-9]*)\s*:</string>
					<key>name</key>
					<string>meta.statement.data.d-label-alone.sas</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix) (?&lt;=^|;) \s* (else) \s*$</string>
					<key>name</key>
					<string>meta.statement.data.d-else-alone.sas</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix) \b(then)\s*$</string>
					<key>name</key>
					<string>meta.statement.data.d-then-alone.sas</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#data_function</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (cards|datalines) \s* ; \s* (\S.*)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.trailing-text.sas</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>text.plain</string>
					<key>end</key>
					<string>^\s*(\S.*?)?\s*;\s*(\S.*)?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.leading-text.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.trailing-text.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.data.cards.sas</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (cards4|datalines4) \s* ; \s* (\S.*)?</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.trailing-text.sas</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>text.plain</string>
					<key>end</key>
					<string>^(.+?)?;;;;\s*(\S.*)?</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.leading-text.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>invalid.illegal.trailing-text.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.data.cards4.sas</string>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (proc)\s+(sql).*?;</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.general.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.proc.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>(?ix) (?&lt;=^|;) \s* (quit)\s*;</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.proc.sql.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_indef</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?ix)\b((a(dd|l(l|ter)|nd|s|vg)|b(etween|trim|y)|c(a(lculated|s(cade|e))|h(aracter|eck)|o(alesce|n(nect(ion)?|straints?|tains)|rresponding|unt)|r(eate|oss)|ss|v)|d(ate|e(cimal|lete|scribe)|is(connect|tinct)|ouble|rop)|e(lse|nd|scape|x(cept|ecute|ists))|f(loat|or(eign|mat)?|r(eq|om)|ull)|group|having|i(n(dex|format|ner|sert|t(e(ger|rsect)|o))?|s)|join|key|l(abel|e(ft|ngth)|ike|ower)|m(ax|e(an|ssage)|i(n|ssing)|odify|sgtype)|n(atural|miss|o(t(rim)?)?|u(ll|meric))?|o(n|r(der)?|uter)|pr(ecision|imary|t)|r(ange|e(al|ferences|s(et|trict))|ight)|s(e(lect|parated|t)|mallint|td(err)?|u(bstring|m(wgt)?))|t(able|hen|o|ranscode)?|u(ni(on|que)|p(date|per)|s(ing|s))|v(a(l(idate|ues)|r(char)?)|iew)|whe(n|re)|yes))\b</string>
							<key>name</key>
							<string>keyword.control.sql.sas</string>
						</dict>
						<dict>
							<key>match</key>
							<string>(?i)\b(run)\s*;</string>
							<key>name</key>
							<string>invalid.illegal.run.sas</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>begin</key>
					<string>(?ix) (?&lt;=^|;) \s* (proc) \s+ ([_a-z][_a-z0-9]*)\b</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>keyword.control.general.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.proc.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>;</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.general.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>meta.statement.proc.other.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>dataset_list</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>begin</key>
					<string>(?ix) \b ( ([_a-z][_a-z0-9]* \.)? ([_a-z][_a-z0-9]*) ) \s* \(</string>
					<key>beginCaptures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.library.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.dataset.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.dataset.with-options.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?ix)(rename)\s*=\s*\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.type.dataset-option.sas</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>name</key>
							<string>meta.dataset-option.paren.rename.sas</string>
						</dict>
						<dict>
							<key>begin</key>
							<string>(?ix)(index|where)\s*=\s*\(</string>
							<key>beginCaptures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.type.dataset-option.sas</string>
								</dict>
							</dict>
							<key>end</key>
							<string>\)</string>
							<key>name</key>
							<string>meta.dataset-option.paren.index-where.sas</string>
							<key>patterns</key>
							<array>
								<dict>
									<key>include</key>
									<string>#parens</string>
								</dict>
							</array>
						</dict>
						<dict>
							<key>captures</key>
							<dict>
								<key>1</key>
								<dict>
									<key>name</key>
									<string>support.type.dataset-option.sas</string>
								</dict>
								<key>3</key>
								<dict>
									<key>name</key>
									<string>invalid.illegal.dataset-option.paren.sas</string>
								</dict>
							</dict>
							<key>match</key>
							<string>(?ix)(
                alter|bufno|bufsize|cntllev|compress|dldmgaction|encrypt|genmax|gennum|label|
                obsbuf|outrep|pw|pwreq|read|repempty|replace|reuse|sortedby|spill|tobsno|type|
                write|fileclose|firstobs|in|obs|pointobs|whereup|idxname|idxwhere|drop|keep
              )\s*(=)\s*(\(.*)?</string>
							<key>name</key>
							<string>meta.dataset-option.noparen.sas</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.library.sas</string>
						</dict>
						<key>3</key>
						<dict>
							<key>name</key>
							<string>entity.name.function.dataset.sas</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(?ix) \b ( ([_a-z][_a-z0-9]* \.)? ([_a-z][_a-z0-9]*\b) \s* (?!=))</string>
					<key>name</key>
					<string>meta.dataset.no-options.sas</string>
				</dict>
			</array>
		</dict>
		<key>logical_op</key>
		<dict>
			<key>match</key>
			<string>(?ix) \b(not|and|or|eq|ne|lt|le|gt|ge|in)\b</string>
			<key>name</key>
			<string>keyword.operator.word.logical.sas</string>
		</dict>
		<key>macro_call</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(?i)(%nrstr)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.nrstr.sas</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.quoted.nrstr.sas</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.macro.call.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>match</key>
							<string>%["'\(\)%]</string>
							<key>name</key>
							<string>constant.character.escape.macro.sas</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[%&amp;]</string>
							<key>name</key>
							<string>constant.character.escape.macro.sas</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings_no_macro</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens_no_macro</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(?i)(%str)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.str.sas</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.quoted.str.sas</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.macro.call.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>match</key>
							<string>%["'\(\)%]</string>
							<key>name</key>
							<string>constant.character.escape.macro.sas</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(?ix) (?: (eval|index|length|superq|symexist|symglobl|symlocal|sysevalf|sysget|sysprod|unquote|bquote|nrbquote|quote|nrquote|scan|qscan|substr|qsubstr|sysfunc|qsysfunc|upcase|qupcase)|(%[_a-z][_a-z0-9]*) ) \s* \(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.macro.call.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)%[_a-z][_a-z0-9]*\b</string>
					<key>name</key>
					<string>support.function.macro.sas</string>
				</dict>
			</array>
		</dict>
		<key>macro_call_instring</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(?i)(%str)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.str.sas</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.quoted.str.sas</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.macro.call.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>match</key>
							<string>%["'\(\)%]</string>
							<key>name</key>
							<string>constant.character.escape.macro.sas</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call_instring</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens_instring</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(?ix) (?: (eval|index|length|superq|symexist|symglobl|symlocal|sysevalf|sysget|sysprod|unquote|bquote|nrbquote|quote|nrquote|scan|qscan|substr|qsubstr|sysfunc|qsysfunc|upcase|qupcase)|(%[_a-z][_a-z0-9]*) ) \s* \(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.macro.call.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call_instring</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens_instring</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)%[_a-z][_a-z0-9]*\b</string>
					<key>name</key>
					<string>support.function.macro.sas</string>
				</dict>
			</array>
		</dict>
		<key>macro_call_open</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(?i)(%nrstr)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.nrstr.sas</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.quoted.nrstr.sas</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.macro.call.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>match</key>
							<string>%["'\(\)%]</string>
							<key>name</key>
							<string>constant.character.escape.macro.sas</string>
						</dict>
						<dict>
							<key>match</key>
							<string>[%&amp;]</string>
							<key>name</key>
							<string>constant.character.escape.macro.sas</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment_star</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings_no_macro</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens_no_macro</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(?i)(%str)\s*\(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.str.sas</string>
						</dict>
					</dict>
					<key>contentName</key>
					<string>meta.quoted.str.sas</string>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.macro.call.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment_block</string>
						</dict>
						<dict>
							<key>match</key>
							<string>%["'\(\)%]</string>
							<key>name</key>
							<string>constant.character.escape.macro.sas</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#comment_star</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#data_proc</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call_open</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(?ix) (?: (eval|index|length|superq|symexist|symglobl|symlocal|sysevalf|sysget|sysprod|unquote|bquote|nrbquote|quote|nrquote|scan|qscan|substr|qsubstr|sysfunc|qsysfunc|upcase|qupcase)|(%[_a-z][_a-z0-9]*) ) \s* \(</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.sas</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>support.function.macro.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>\)</string>
					<key>name</key>
					<string>meta.macro.call.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>include</key>
							<string>#comment</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#data_proc</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call_open</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#strings</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#parens</string>
						</dict>
					</array>
				</dict>
				<dict>
					<key>match</key>
					<string>(?i)%[_a-z][_a-z0-9]*\b</string>
					<key>name</key>
					<string>support.function.macro.sas</string>
				</dict>
			</array>
		</dict>
		<key>macro_def</key>
		<dict>
			<key>begin</key>
			<string>(?i)(%macro)\s+([_a-z][_a-z0-9]*)\b</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.macro.anywhere.sas</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.macro.sas</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(?i)(%mend)(?:\s+(?:(\2)|([_a-z][_a-z0-9]*)))?\b</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.control.macro.anywhere.sas</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.macro.sas</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>invalid.illegal.name-mismatch.sas</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.macro.definition.sas</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_open_code</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_indef</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_call_open</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#data_proc</string>
				</dict>
			</array>
		</dict>
		<key>macro_indef</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>(?ix)%(goto|if|then|else|do|to|by|until|while|end|return|abort|local)\b</string>
					<key>name</key>
					<string>keyword.control.macro.inside.sas</string>
				</dict>
				<dict>
					<key>match</key>
					<string>(?ix)%[_a-z][_a-z0-9]*(?=:)</string>
					<key>name</key>
					<string>entity.name.section.label.sas</string>
				</dict>
			</array>
		</dict>
		<key>macro_keyword_invalid</key>
		<dict>
			<key>match</key>
			<string>(?ix)%(goto|if|then|else|do|to|by|until|while|end|return|abort|local)\b</string>
			<key>name</key>
			<string>invalid.illegal.control.macro.sas</string>
		</dict>
		<key>macro_open_code</key>
		<dict>
			<key>match</key>
			<string>(?ix) % (
            inc|include|
            let|global|put|
            symdel|syscall|sysexec|copy|
            display|input|list|run|window|syslput|sysrput
          )\b</string>
			<key>name</key>
			<string>keyword.control.macro.sas</string>
		</dict>
		<key>macro_variable</key>
		<dict>
			<key>match</key>
			<string>(?i)&amp;[_a-z][_a-z0-9]*\.?</string>
			<key>name</key>
			<string>variable.other.macro.sas</string>
		</dict>
		<key>parens</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_call</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parens</string>
				</dict>
			</array>
		</dict>
		<key>parens_instring</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#macro_variable</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#macro_call_instring</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parens_instring</string>
				</dict>
			</array>
		</dict>
		<key>parens_no_macro</key>
		<dict>
			<key>begin</key>
			<string>\(</string>
			<key>end</key>
			<string>\)</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#comment_block</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#strings_no_macro</string>
				</dict>
				<dict>
					<key>include</key>
					<string>#parens_no_macro</string>
				</dict>
			</array>
		</dict>
		<key>strings</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings_single</string>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>(")</string>
					<key>beginCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>("(?!"))</string>
					<key>endCaptures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>""</string>
							<key>name</key>
							<string>constant.character.escape.quote.sas</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_variable</string>
						</dict>
						<dict>
							<key>include</key>
							<string>#macro_call_instring</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings_no_macro</key>
		<dict>
			<key>patterns</key>
			<array>
				<dict>
					<key>include</key>
					<string>#strings_single</string>
				</dict>
				<dict>
					<key>applyEndPatternLast</key>
					<integer>1</integer>
					<key>begin</key>
					<string>"</string>
					<key>beginCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.begin.sas</string>
						</dict>
					</dict>
					<key>end</key>
					<string>"(?!")</string>
					<key>endCaptures</key>
					<dict>
						<key>0</key>
						<dict>
							<key>name</key>
							<string>punctuation.definition.string.end.sas</string>
						</dict>
					</dict>
					<key>name</key>
					<string>string.quoted.double.sas</string>
					<key>patterns</key>
					<array>
						<dict>
							<key>match</key>
							<string>""</string>
							<key>name</key>
							<string>constant.character.escape.quote.sas</string>
						</dict>
					</array>
				</dict>
			</array>
		</dict>
		<key>strings_single</key>
		<dict>
			<key>applyEndPatternLast</key>
			<integer>1</integer>
			<key>begin</key>
			<string>(')</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.begin.sas</string>
				</dict>
			</dict>
			<key>end</key>
			<string>('(?!'))</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.string.end.sas</string>
				</dict>
			</dict>
			<key>name</key>
			<string>string.quoted.single.sas</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>match</key>
					<string>''</string>
					<key>name</key>
					<string>constant.character.escape.apostrophe.sas</string>
				</dict>
			</array>
		</dict>
	</dict>
	<key>scopeName</key>
	<string>source.sas</string>
	<key>uuid</key>
	<string>3057B953-CCE9-4A59-8D7C-7B6C0979BBEB</string>
</dict>
</plist>